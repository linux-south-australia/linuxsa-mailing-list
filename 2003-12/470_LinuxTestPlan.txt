INTRO

A harried project manager needs to know what collection of versions on the
Linux systems he will deploy he needs to upgrade to or downgrade to to avoid
the latest problem that the development team found.

An experienced software developer would like to contribute to Linux or some project surrounding it but doesn't know where to begin.

Each of these people are looking for information, and on a daily basis, many 
people working with Linux would like to know what bugs are they potentially
facing or to have a higher level of confidence that the software they are 
using has been tested in some way. The problem as I see it is that there is 
not enough testing being done for Linux, and what testing is done is 
fragmented among many different groups of people with different tests and
different databases.

I propose that the Open Software Community embark on a distributed testing 
project that is designed to use the large number of people who would like to
contribute anything, even if it is only some spare CPU cycles on their 
collection of machines and a little bit of their time to start the tests.

THE PROJECT

This project will develop a testing framework and a data collection facility
that allows many people around the world to develop and contribute tests. In
addition, it will encourage people to run tests on all sorts of systems to 
maximize the information return.

The goal must be to gather testing data about as many collections of software
and versions of that software as possible, so that we can answer questions 
about what set of versions of software pass or fail various tests.

In addition, all the tests must be scriptable so that they can be run in an
automated fashion on any machine or set of machines.

Further, the testing framework must allow for tests:

 - To be run from and against the same system

 - To be run from one system against another system

 - To be run from one system while involving muyltiple other client and 
   server systems

 - Possibly even to allow for multiple test drivers.

VISION

The vision I have here is that at some time in the future it will be 
possible for people to interact with the growing collection of test 
definitions, tests and results to pose and answer questions like:

 - What problems exist out there that I could work on to fix?

 - What tests exist in this area so I can think about devising a
   new test and then implement it.

 - Why did this particular problem not get picked up by existing 
   testing and can I define a new test that is needed.

 - What tests have been defined but have not yet been implemented so
   I can find one to create.

 - What set of versions does this problem manifest itself on so I can
   pin it down more?

 - What confidence should I have that this set of software (Kernel,
   utilities and some applications) has been tested in my type of 
   environment?

 - How much more testing should we as a medium or large organization do to 
   assure ourselves that the version of Linux and these apps we want 
   to use will actually work in our environment.

THE PROBLEMS

There are many problems with this project and one of the goals of the FixIt
would be to come up with solutions to them. Some of the problems are:

- What testing framework to use

- How to stop people from poisoning the database

- What info do we want to collect

- How to get enough info into the database

- What to test? (Everything) (Kernel, APIs, X, protocol implementations, 
  applicatkions, Databases, web servers, etc, but start with the basics.)

- How to structure the tests

- How to manage the tests (including how to prevent invalid or broken
  tests from entering the system

- The reports it should be possible to pull from the database

- Where the database should go

- What Applications are needed to interact with the database ... ie, 
  something that can answer what components should I upgrade to get to 
  a collection that overcomes the problem I currently have.

- Integration with bugzilla ...

- and so on

WHAT WE WANT TO DO DURING THE FIXIT SESSION

Collect ideas and work through some of the issues

Assemble an initial team to start the technical work.

ABOUT RICHARD SHARPE

Richard Sharpe has worked in the computer industry for over 20 years and 
has contributed to two Open Source projects: Samba and Ethereal. He currently
works for a storage startup called Panasas (www.panasas.com) where he works 
on Samba, FreeBSD, and Linux.

DISCUSSION METHOD

My preferred discussion medium is a mailing list at the moment.
